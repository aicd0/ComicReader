<UserControl
    x:Class="ComicReader.Controls.ComicItemVertical"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:converters="using:ComicReader.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:data="using:ComicReader.DesignData"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mtuu="using:Microsoft.Toolkit.Uwp.UI"
    xmlns:mtuum="using:Microsoft.Toolkit.Uwp.UI.Media"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    xmlns:muxm="using:Microsoft.UI.Xaml.Media"
    d:DataContext="{d:DesignInstance Type=data:ComicItemViewModel}"
    d:DesignHeight="200"
    d:DesignWidth="140"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Styles/RatingControl.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <!--  Converters  -->
            <converters:BooleanNegationConverter x:Key="BooleanNegationConverter" />
            <converters:BooleanToVisibilityNegationConverter x:Key="BooleanToVisibilityNegationConverter" />

            <!--  Shadows  -->
            <mtuum:AttachedCardShadow
                x:Key="CommonShadow"
                Opacity="0.1"
                Offset="0" />
        </ResourceDictionary>
    </UserControl.Resources>

    <Grid
        x:Name="Root"
        Background="{ThemeResource ComicItemBackground}"
        DataContextChanged="OnDataContextChanged"
        PointerEntered="OnPointerEntered"
        PointerExited="OnPointerExited"
        Tapped="{x:Bind Ctx.OnItemTapped}">
        <Grid.BackgroundTransition>
            <BrushTransition Duration="0:0:0.1" />
        </Grid.BackgroundTransition>

        <Grid.ContextFlyout>
            <MenuFlyout>
                <MenuFlyoutItem
                    x:Uid="MenuFlyoutOpenInNewTab"
                    Click="{x:Bind Ctx.OnOpenInNewTabClicked}"
                    Icon="Document" />
                <MenuFlyoutItem
                    x:Uid="MenuFlyoutAddToFavorites"
                    Click="{x:Bind Ctx.OnAddToFavoritesClicked}"
                    Icon="Favorite"
                    Visibility="{x:Bind Ctx.IsFavorite, Converter={StaticResource BooleanToVisibilityNegationConverter}}" />
                <MenuFlyoutItem
                    x:Uid="MenuFlyoutRemoveFromFavorites"
                    Click="{x:Bind Ctx.OnRemoveFromFavoritesClicked}"
                    Icon="Unfavorite"
                    Visibility="{x:Bind Ctx.IsFavorite}" />
                <MenuFlyoutItem
                    x:Uid="MenuFlyoutHide"
                    Click="{x:Bind Ctx.OnHideClicked}"
                    Visibility="{x:Bind Ctx.IsHide, Converter={StaticResource BooleanToVisibilityNegationConverter}}">
                    <MenuFlyoutItem.Icon>
                        <FontIcon Glyph="&#xE711;" />
                    </MenuFlyoutItem.Icon>
                </MenuFlyoutItem>
            </MenuFlyout>
        </Grid.ContextFlyout>

        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="0" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>
            <Grid Grid.Row="1" Padding="20,35">
                <Grid Height="{StaticResource ComicItemVerticalImageHeight}">
                    <Grid
                        HorizontalAlignment="Center"
                        VerticalAlignment="Center"
                        Visibility="{x:Bind Ctx.IsImageLoaded}">
                        <Grid mtuu:Effects.Shadow="{StaticResource CommonShadow}">
                            <Image Opacity="0" Source="{x:Bind Ctx.Image}" />
                        </Grid>
                        <Border CornerRadius="5">
                            <Image Source="{x:Bind Ctx.Image}" />
                        </Border>
                    </Grid>
                </Grid>
            </Grid>
            <Grid Grid.Row="2" Padding="10">
                <StackPanel Orientation="Vertical" Spacing="3">
                    <TextBlock
                        FontSize="14"
                        FontWeight="SemiBold"
                        MaxLines="2"
                        Text="{x:Bind Ctx.Title}"
                        TextTrimming="CharacterEllipsis"
                        TextWrapping="Wrap"
                        ToolTipService.ToolTip="{x:Bind Ctx.Title}" />

                    <StackPanel Margin="0,5,0,0" Orientation="Horizontal">
                        <Viewbox
                            Height="20"
                            HorizontalAlignment="Left"
                            VerticalAlignment="Center">
                            <RatingControl
                                Margin="0,0,-13,0"
                                PlaceholderValue="{x:Bind Ctx.Rating}"
                                Style="{StaticResource RatingControlReadOnly}"
                                Visibility="{x:Bind Ctx.IsRatingVisible}" />
                        </Viewbox>
                        <TextBlock
                            FontSize="12"
                            Opacity="0.6"
                            Text="{x:Bind Ctx.Progress}" />
                    </StackPanel>
                </StackPanel>
                <Grid
                    HorizontalAlignment="Right"
                    VerticalAlignment="Bottom"
                    Visibility="{x:Bind Ctx.IsFavorite}">
                    <FontIcon
                        FontSize="14"
                        Foreground="{ThemeResource SystemAccentColor}"
                        Glyph="&#xE735;" />
                </Grid>
            </Grid>
        </Grid>

        <VisualStateManager.VisualStateGroups>
            <VisualStateGroup x:Name="CommonStates">
                <VisualState x:Name="Normal">
                    <VisualState.Setters>
                        <Setter Target="Root.Background" Value="{ThemeResource ComicItemBackground}" />
                    </VisualState.Setters>
                </VisualState>
                <VisualState x:Name="PointerOver">
                    <VisualState.Setters>
                        <Setter Target="Root.Background" Value="{ThemeResource ComicItemBackgroundPointerOver}" />
                    </VisualState.Setters>
                </VisualState>
            </VisualStateGroup>
        </VisualStateManager.VisualStateGroups>
    </Grid>
</UserControl>