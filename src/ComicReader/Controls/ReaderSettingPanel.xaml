<UserControl
    x:Class="ComicReader.Controls.ReaderSettingPanel"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:controls="using:ComicReader.Controls"
    xmlns:converters="using:ComicReader.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    d:DesignHeight="300"
    d:DesignWidth="400"
    mc:Ignorable="d">

    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="../Resources/Styles/AppBarButton.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <Style x:Key="PageArrangementListViewItemStyle" TargetType="ListViewItem">
                <Setter Property="FontFamily" Value="{ThemeResource ContentControlThemeFontFamily}" />
                <Setter Property="FontSize" Value="{ThemeResource ControlContentThemeFontSize}" />
                <Setter Property="Background" Value="{ThemeResource ListViewItemBackground}" />
                <Setter Property="Foreground" Value="{ThemeResource ListViewItemForeground}" />
                <Setter Property="TabNavigation" Value="Local" />
                <Setter Property="IsHoldingEnabled" Value="True" />
                <Setter Property="Padding" Value="50,9" />
                <Setter Property="Margin" Value="-50,-3" />
                <Setter Property="HorizontalContentAlignment" Value="Left" />
                <Setter Property="VerticalContentAlignment" Value="Center" />
                <Setter Property="MinWidth" Value="{ThemeResource ListViewItemMinWidth}" />
                <Setter Property="MinHeight" Value="{ThemeResource ListViewItemMinHeight}" />
                <Setter Property="AllowDrop" Value="False" />
                <Setter Property="UseSystemFocusVisuals" Value="{StaticResource UseSystemFocusVisuals}" />
                <Setter Property="FocusVisualMargin" Value="0" />
                <Setter Property="Template">
                    <Setter.Value>
                        <ControlTemplate TargetType="ListViewItem">
                            <ListViewItemPresenter
                                x:Name="Root"
                                HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"
                                CheckBoxBrush="{ThemeResource ListViewItemCheckBoxBrush}"
                                CheckBrush="{ThemeResource ListViewItemCheckBrush}"
                                CheckMode="{ThemeResource ListViewItemCheckMode}"
                                ContentMargin="{TemplateBinding Padding}"
                                ContentTransitions="{TemplateBinding ContentTransitions}"
                                Control.IsTemplateFocusTarget="True"
                                DisabledOpacity="{ThemeResource ListViewItemDisabledThemeOpacity}"
                                DragBackground="{ThemeResource ListViewItemDragBackground}"
                                DragForeground="{ThemeResource ListViewItemDragForeground}"
                                DragOpacity="{ThemeResource ListViewItemDragThemeOpacity}"
                                FocusBorderBrush="{ThemeResource ListViewItemFocusBorderBrush}"
                                FocusSecondaryBorderBrush="{ThemeResource ListViewItemFocusSecondaryBorderBrush}"
                                FocusVisualMargin="{TemplateBinding FocusVisualMargin}"
                                PlaceholderBackground="{ThemeResource ListViewItemPlaceholderBackground}"
                                PointerOverBackground="{ThemeResource ListViewItemPointerOverBackground1}"
                                PointerOverForeground="{ThemeResource ListViewItemForegroundPointerOver}"
                                PressedBackground="{ThemeResource ListViewItemPressedBackground1}"
                                ReorderHintOffset="{ThemeResource ListViewItemReorderHintThemeOffset}"
                                SelectedForeground="{ThemeResource ListViewItemSelectedForegroundThemeBrush}"
                                SelectedPointerOverBackground="{ThemeResource ListViewItemPointerOverBackground1}"
                                SelectedPressedBackground="{ThemeResource ListViewItemPressedBackground1}"
                                SelectionCheckMarkVisualEnabled="{ThemeResource ListViewItemSelectionCheckMarkVisualEnabled}">
                                <VisualStateManager.VisualStateGroups>
                                    <VisualStateGroup x:Name="CommonStates">
                                        <VisualState x:Name="Normal" />
                                        <VisualState x:Name="Selected" />
                                        <VisualState x:Name="PointerOver" />
                                        <VisualState x:Name="PointerOverSelected" />
                                        <VisualState x:Name="PointerOverPressed" />
                                        <VisualState x:Name="Pressed" />
                                        <VisualState x:Name="PressedSelected" />
                                    </VisualStateGroup>
                                    <VisualStateGroup x:Name="DisabledStates">
                                        <VisualState x:Name="Enabled" />
                                        <VisualState x:Name="Disabled" />
                                    </VisualStateGroup>
                                </VisualStateManager.VisualStateGroups>
                            </ListViewItemPresenter>
                        </ControlTemplate>
                    </Setter.Value>
                </Setter>
            </Style>

            <!--  Converters  -->
            <converters:BooleanNegationConverter x:Key="BooleanNegationConverter" />
            <converters:BooleanToVisibilityNegationConverter x:Key="BooleanToVisibilityNegationConverter" />

        </ResourceDictionary>
    </UserControl.Resources>

    <Grid>
        <StackPanel Orientation="Vertical">
            <ListView
                Margin="-50,0"
                Padding="50,0"
                SelectedIndex="{x:Bind Ctx.PageArrangementIndex, Mode=TwoWay}"
                SelectionMode="Single">

                <!--  Single  -->
                <ListViewItem Style="{StaticResource PageArrangementListViewItemStyle}">
                    <StackPanel
                        Margin="3"
                        FlowDirection="{x:Bind Ctx.DemoPageFlowDirection, Mode=OneWay}"
                        Orientation="Horizontal"
                        Spacing="6">
                        <controls:PageDemoSingle Header="1" IsHighlight="{x:Bind Ctx.IsPageArrangementSingle, Mode=OneWay}" />
                        <controls:PageDemoSingle Header="2" IsHighlight="{x:Bind Ctx.IsPageArrangementSingle, Mode=OneWay}" />
                        <controls:PageDemoSingle Header="3" IsHighlight="{x:Bind Ctx.IsPageArrangementSingle, Mode=OneWay}" />
                        <controls:PageDemoSingle Header="4" IsHighlight="{x:Bind Ctx.IsPageArrangementSingle, Mode=OneWay}" />
                        <controls:PageDemoSingle Header="5" IsHighlight="{x:Bind Ctx.IsPageArrangementSingle, Mode=OneWay}" />
                    </StackPanel>
                </ListViewItem>

                <!--  DualCover  -->
                <ListViewItem Style="{StaticResource PageArrangementListViewItemStyle}">
                    <StackPanel
                        Margin="3"
                        FlowDirection="{x:Bind Ctx.DemoPageFlowDirection, Mode=OneWay}"
                        Orientation="Horizontal"
                        Spacing="12">
                        <controls:PageDemoSingle Header="1" IsHighlight="{x:Bind Ctx.IsPageArrangementDualCover, Mode=OneWay}" />
                        <controls:PageDemoDual
                            FlowDirection="LeftToRight"
                            HeaderL="2"
                            HeaderR="3"
                            IsHighlight="{x:Bind Ctx.IsPageArrangementDualCover, Mode=OneWay}" />
                        <controls:PageDemoDual
                            FlowDirection="LeftToRight"
                            HeaderL="4"
                            HeaderR="5"
                            IsHighlight="{x:Bind Ctx.IsPageArrangementDualCover, Mode=OneWay}" />
                    </StackPanel>
                </ListViewItem>

                <!--  DualCoverMirror  -->
                <ListViewItem Style="{StaticResource PageArrangementListViewItemStyle}">
                    <StackPanel
                        Margin="3"
                        FlowDirection="{x:Bind Ctx.DemoPageFlowDirection, Mode=OneWay}"
                        Orientation="Horizontal"
                        Spacing="12">
                        <controls:PageDemoSingle Header="1" IsHighlight="{x:Bind Ctx.IsPageArrangementDualCoverMirror, Mode=OneWay}" />
                        <controls:PageDemoDual
                            FlowDirection="LeftToRight"
                            HeaderL="3"
                            HeaderR="2"
                            IsHighlight="{x:Bind Ctx.IsPageArrangementDualCoverMirror, Mode=OneWay}" />
                        <controls:PageDemoDual
                            FlowDirection="LeftToRight"
                            HeaderL="5"
                            HeaderR="4"
                            IsHighlight="{x:Bind Ctx.IsPageArrangementDualCoverMirror, Mode=OneWay}" />
                    </StackPanel>
                </ListViewItem>

                <!--  DualNoCover  -->
                <ListViewItem Style="{StaticResource PageArrangementListViewItemStyle}">
                    <StackPanel
                        Margin="3"
                        FlowDirection="{x:Bind Ctx.DemoPageFlowDirection, Mode=OneWay}"
                        Orientation="Horizontal"
                        Spacing="12">
                        <controls:PageDemoDual
                            FlowDirection="LeftToRight"
                            HeaderL="1"
                            HeaderR="2"
                            IsHighlight="{x:Bind Ctx.IsPageArrangementDualNoCover, Mode=OneWay}" />
                        <controls:PageDemoDual
                            FlowDirection="LeftToRight"
                            HeaderL="3"
                            HeaderR="4"
                            IsHighlight="{x:Bind Ctx.IsPageArrangementDualNoCover, Mode=OneWay}" />
                        <controls:PageDemoSingle Header="5" IsHighlight="{x:Bind Ctx.IsPageArrangementDualNoCover, Mode=OneWay}" />
                    </StackPanel>
                </ListViewItem>

                <!--  DualNoCoverMirror  -->
                <ListViewItem Style="{StaticResource PageArrangementListViewItemStyle}">
                    <StackPanel
                        Margin="3"
                        FlowDirection="{x:Bind Ctx.DemoPageFlowDirection, Mode=OneWay}"
                        Orientation="Horizontal"
                        Spacing="12">
                        <controls:PageDemoDual
                            FlowDirection="LeftToRight"
                            HeaderL="2"
                            HeaderR="1"
                            IsHighlight="{x:Bind Ctx.IsPageArrangementDualNoCoverMirror, Mode=OneWay}" />
                        <controls:PageDemoDual
                            FlowDirection="LeftToRight"
                            HeaderL="4"
                            HeaderR="3"
                            IsHighlight="{x:Bind Ctx.IsPageArrangementDualNoCoverMirror, Mode=OneWay}" />
                        <controls:PageDemoSingle Header="5" IsHighlight="{x:Bind Ctx.IsPageArrangementDualNoCoverMirror, Mode=OneWay}" />
                    </StackPanel>
                </ListViewItem>
            </ListView>
            <Grid Height="10" />
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                <StackPanel Grid.Column="0" Orientation="Horizontal">
                    <!--  Vertical/Horizontal  -->
                    <AppBarButton
                        x:Uid="VerticalButton"
                        Click="{x:Bind Ctx.OnSetHorizontal}"
                        Style="{StaticResource AppBarButtonCompactStyle}"
                        Visibility="{x:Bind Ctx.IsVertical, Mode=OneWay}">
                        <Grid>
                            <FontIcon Glyph="&#xE7C3;" />
                        </Grid>
                    </AppBarButton>
                    <AppBarButton
                        x:Uid="HorizontalButton"
                        Click="{x:Bind Ctx.OnSetVertical}"
                        Style="{StaticResource AppBarButtonCompactStyle}"
                        Visibility="{x:Bind Ctx.IsVertical, Converter={StaticResource BooleanToVisibilityNegationConverter}, Mode=OneWay}">
                        <Grid>
                            <FontIcon Glyph="&#xEF6B;" />
                        </Grid>
                    </AppBarButton>

                    <!--  Flow Direction  -->
                    <AppBarButton
                        x:Uid="LeftToRightButton"
                        Click="{x:Bind Ctx.OnSetRightToLeft}"
                        Style="{StaticResource AppBarButtonCompactStyle}"
                        Visibility="{x:Bind Ctx.IsLeftToRightVisible, Mode=OneWay}">
                        <Grid>
                            <FontIcon Glyph="&#xEBE7;" />
                        </Grid>
                    </AppBarButton>
                    <AppBarButton
                        x:Uid="RightToLeftButton"
                        Click="{x:Bind Ctx.OnSetLeftToRight}"
                        Style="{StaticResource AppBarButtonCompactStyle}"
                        Visibility="{x:Bind Ctx.IsRightToLeftVisible, Mode=OneWay}">
                        <Grid>
                            <FontIcon Glyph="&#xEC52;" />
                        </Grid>
                    </AppBarButton>
                </StackPanel>

                <StackPanel Grid.Column="2" Orientation="Horizontal">
                    <!--  Continuous reading  -->
                    <AppBarButton
                        x:Uid="ContinuousButton"
                        Click="{x:Bind Ctx.OnSetDiscrete}"
                        Style="{StaticResource AppBarButtonCompactStyle}"
                        Visibility="{x:Bind Ctx.IsContinuous, Mode=OneWay}">
                        <Grid>
                            <FontIcon Glyph="&#xE89A;" />
                        </Grid>
                    </AppBarButton>
                    <AppBarButton
                        x:Uid="DiscreteButton"
                        Click="{x:Bind Ctx.OnSetContinuous}"
                        Style="{StaticResource AppBarButtonCompactStyle}"
                        Visibility="{x:Bind Ctx.IsContinuous, Converter={StaticResource BooleanToVisibilityNegationConverter}, Mode=OneWay}">
                        <Grid>
                            <FontIcon Glyph="&#xE7C3;" />
                        </Grid>
                    </AppBarButton>
                </StackPanel>
            </Grid>
        </StackPanel>
    </Grid>
</UserControl>
